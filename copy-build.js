import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// Caminhos
const sourceDir = path.join(__dirname, '..', 'dist');
const targetDir = __dirname;

// Fun√ß√£o para copiar diret√≥rio recursivamente
function copyDir(src, dest) {
  if (!fs.existsSync(src)) {
    console.error(`‚ùå Diret√≥rio de origem n√£o encontrado: ${src}`);
    console.log('üí° Execute primeiro: npm run build no projeto principal');
    process.exit(1);
  }

  // Criar diret√≥rio de destino se n√£o existir
  if (!fs.existsSync(dest)) {
    fs.mkdirSync(dest, { recursive: true });
  }

  const entries = fs.readdirSync(src, { withFileTypes: true });

  for (let entry of entries) {
    const srcPath = path.join(src, entry.name);
    const destPath = path.join(dest, entry.name);

    if (entry.isDirectory()) {
      copyDir(srcPath, destPath);
    } else {
      // N√£o copiar arquivos que j√° existem na pasta de hospedagem
      if (!['package.json', 'copy-build.js', 'README.md', '.gitignore'].includes(entry.name)) {
        fs.copyFileSync(srcPath, destPath);
      }
    }
  }
}

console.log('üöÄ Iniciando c√≥pia dos arquivos de build...');

try {
  // Limpar arquivos antigos (exceto arquivos de configura√ß√£o)
  const currentFiles = fs.readdirSync(targetDir);
  const filesToKeep = ['package.json', 'copy-build.js', 'README.md', '.gitignore', '.git'];
  
  currentFiles.forEach(file => {
    if (!filesToKeep.includes(file)) {
      const filePath = path.join(targetDir, file);
      const stat = fs.statSync(filePath);
      
      if (stat.isDirectory()) {
        fs.rmSync(filePath, { recursive: true, force: true });
      } else {
        fs.unlinkSync(filePath);
      }
    }
  });

  // Copiar novos arquivos
  copyDir(sourceDir, targetDir);
  
  console.log('‚úÖ Arquivos copiados com sucesso!');
  console.log('üìÅ Arquivos prontos para deploy no GitHub Pages');
  console.log('');
  console.log('üìã Pr√≥ximos passos:');
  console.log('1. Inicialize um reposit√≥rio Git nesta pasta');
  console.log('2. Adicione os arquivos ao Git');
  console.log('3. Fa√ßa push para o GitHub');
  console.log('4. Configure GitHub Pages nas configura√ß√µes do reposit√≥rio');
  
} catch (error) {
  console.error('‚ùå Erro ao copiar arquivos:', error.message);
  process.exit(1);
}